## 引入页面的表头数据
#parse("platform/head.vm")

<title>表单的序列化</title>

</head>

<body>
<div class="container">
    ## 引入页面的导航条
    #parse("platform/navbar.vm")
    <div class="row" >
    ## 设置导航条一下 左侧栏导航
        <div class="col-md-2 sider">

        </div>
    ## 内容
        <div class="row col-md-9 content">
            <div class="row" style="height: 50px;width: auto">

            </div>
            <div class="row">
            ##  表单的设置和提交样式
                <div class="col-md-3">
                    <form action="" id="formId">
                    ##  表单样式的css 处理
                        <div class="form-group">
                            <label for="">账号:</label>
                            <input type="text" class="form-control" name="id" value="无敌是多么寂寞">
                        </div>
                        <div class="form-group">
                            <label for="">姓名:</label>
                            <input type="text" class="form-control" name="name" value="韩菱纱">
                        </div>
                        <div class="form-group">
                            <label for="">住址:</label>
                            <input type="text" class="form-control" name="address" value="仙剑客栈">
                        </div>
                    ## 提交按钮的css
                        <button type="button" id="btn" class="btn btn-primary">提交</button>
                        <button type="button" id="reset" class="btn btn-default">取消</button>
                    </form>
                </div>
            </div>

        </div>

    </div>

</div>
#parse("platform/footer.vm")
<script>
    $(document).ready(function () {
        //点击提交按钮 打印两种序列化方式出来的字符串
        $("#btn").click(function () {
            console.log($("#formId").serialize());
            console.log($("#formId").serializeArray())
        })

        //异步提交不想一个表单一个表单的写传输数据可以直接序列还表单如下：
        $.ajax({
            url:"/demo",
            type:"post",
            data:$("#formId").serialize(),
            success:function (data) {
                //请求完成之后回调函数
            }
        })
    });
    //创建一个转化的方法
    function getFormData(formId){

        if(formId){
            //首先获取表单的序列化数组
            var arr = $(formId).serializeArray();
            if(arr && arr.length > 0){
                var b = {};//创建一个空的对象 以便装数组数据
                $.each(arr,function(index,it){//index为数组的下标 it为数组对应的数据对象
                    if(it.value){//判断值是否为空
                        if(d[it.name]){//判断值是否有同名的多个数据
                            d[it.name] = d[it.name] +","+ it.value;

                        }else{
                            d[it.name] = it.value;
                        }
                    }
                })
                return b ; // 返回已经拼装好的对象
            }
        }
        return {};//如果不存在此id则传出一个空的对象
    }



    //以上述数据为例 返回的对象如下
    var result= {"start":"xioaming","end":"hahha","mulit":"dsdf"}

</script>
</body>
</html>


